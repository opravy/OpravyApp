{"version":3,"sources":["webpack:///./src/app/pages/signup/signup.module.ts","webpack:///./src/app/pages/signup/signup.page.html","webpack:///./src/app/pages/signup/signup.page.scss","webpack:///./src/app/pages/signup/signup.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEF;AAE3C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAWF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAT5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,uDAAU,CAAC;SAC3B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB7B,ukD;;;;;;;;;;;ACAA,+DAA+D,+I;;;;;;;;;;;;;;;;;;;;ACAb;AACD;AACmC;AAC3C;AAOzC;IAIE,oBACU,WAAoC,EACpC,MAAc,EACf,eAAgC;QAF/B,gBAAW,GAAX,WAAW,CAAyB;QACpC,WAAM,GAAN,MAAM,CAAQ;QACf,oBAAe,GAAf,eAAe,CAAiB;QANjC,WAAM,GAAG,KAAK,CAAC;IAOnB,CAAC;IAEL,6BAAQ,GAAR;IACA,CAAC;IAEK,iCAAY,GAAlB,UAAmB,OAAe,EAAE,MAAM;;;;;4BAC1B,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,OAAO,EAAE,OAAO;4BAChB,QAAQ,EAAE,IAAI;4BACd,OAAO,EAAE;gCACP,MAAM;6BACP;yBACF,CAAC;;wBANI,KAAK,GAAG,SAMZ;wBAEF,KAAK,CAAC,OAAO,EAAE;;;;;KAChB;IAEM,6BAAQ,GAAf;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAEK,2BAAM,GAAZ,UAAa,IAAI;;;;;4BACf,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;6BACjE,IAAI,CAAC,eAAK;4BACT,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACrB,CAAC,EAAE,aAAG;4BACJ,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;4BACpB,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC;wBAChC,CAAC,CAAC;;wBANJ,SAMI;6BAEA,IAAI,CAAC,MAAM,EAAX,wBAAW;wBACb,qBAAM,IAAI,CAAC,YAAY,CAAC,qCAAqC,EAC3D;gCACE,IAAI,EAAE,KAAK;gCACX,IAAI,EAAE,QAAQ;gCACd,IAAI,EAAE,OAAO;gCACb,OAAO,EAAE;oCACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;gCACjC,CAAC;6BACF,CAAC;;wBARJ,SAQI,CAAC;;;wBAEL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAC/B;4BACE,IAAI,EAAE,SAAS;yBAChB,CAAC;;;;;;KAGP;IAvDU,UAAU;QALtB,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,kGAAiC;;SAElC,CAAC;+EAMuB,iGAAuB;YAC5B,sDAAM;YACE,8DAAe;OAP9B,UAAU,CAyDtB;IAAD,iBAAC;CAAA;AAzDsB","file":"pages-signup-signup-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SignupPage } from './signup.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SignupPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [SignupPage]\r\n})\r\nexport class SignupPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Registrarse</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"signUp(form)\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row color=\\\"primary\\\" justify-content-center>\\r\\n        <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\r\\n          <div text-center>\\r\\n            <h3>Registrarse</h3>\\r\\n          </div>\\r\\n          <div padding>\\r\\n            <ion-item>\\r\\n              <ion-input name=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"your@email.com\\\" ngModel required></ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-input name=\\\"text\\\" type=\\\"text\\\" placeholder=\\\"Tu nombre\\\" ngModel required></ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-input name=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" ngModel required></ion-input>\\r\\n            </ion-item>\\r\\n          </div>\\r\\n          <div padding>\\r\\n            <ion-button size=\\\"large\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" expand=\\\"block\\\">Registrarse</ion-button>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </form>\\r\\n  <ion-row color=\\\"tertiary\\\" justify-content-center>\\r\\n      <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\r\\n        <div padding>\\r\\n          <ion-button color=\\\"tertiary\\\" (click)=\\\"logearse()\\\" expand=\\\"block\\\">Iniciar Sesi√≥n</ion-button>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { AuthentificationService } from 'src/app/services/authentification.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.page.html',\r\n  styleUrls: ['./signup.page.scss'],\r\n})\r\nexport class SignupPage implements OnInit {\r\n  private status = false;\r\n  private errMessage: string;\r\n\r\n  constructor(\r\n    private authService: AuthentificationService,\r\n    private router: Router,\r\n    public toastController: ToastController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async presentToast(message: string, button) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n      buttons: [\r\n        button\r\n      ]\r\n    });\r\n    \r\n    toast.present()\r\n  }\r\n\r\n  public logearse() {\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  async signUp(form) {\r\n    await this.authService.signUp(form.value.email, form.value.password)\r\n      .then(value => {\r\n        this.status = true;\r\n      }, err => {\r\n        this.status = false;\r\n        this.errMessage = err.message;\r\n      })\r\n\r\n    if (this.status) {\r\n      await this.presentToast('Registro correcto, se puede logear.',\r\n        {\r\n          side: 'end',\r\n          icon: 'log-in',\r\n          text: 'Login',\r\n          handler: () => {\r\n            this.router.navigate(['login'])\r\n          }\r\n        });\r\n    } else {\r\n      this.presentToast(this.errMessage,\r\n        {\r\n          text: 'Aceptar'\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}